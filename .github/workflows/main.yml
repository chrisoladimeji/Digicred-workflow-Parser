# .github/workflows/ci.yml
name: CI Test and Notify

# Defines when this workflow will run
on:
  # On pushes to the main or develop branches
  push:
    branches: [ "main", "develop" ]
  # On Pull Requests targeting those branches
  pull_request:
    branches: [ "main", "develop" ]
  # Allows you to run it manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-test:
    # Tells the job to run on your EC2 machine
    runs-on: self-hosted

    steps:
      # 1. Downloads a copy of your code to the runner
      - name: Check out repository code
        uses: actions/checkout@v4

      # 2. Sets up the correct version of Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Starts your database services
      - name: Start Dependent Services
        run: docker-compose up -d

      # 4. Installs project packages
      - name: Install Dependencies
        run: yarn install

      # 5. Runs the tests and sends the Slack notification
      - name: Run Jest Tests
        run: yarn test
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: 'digicred-Test'

      # 6. Cleans up and stops the database services
      - name: Stop Services
        # This 'if' statement ensures this step runs even if tests fail
        if: always()
        run: docker-compose down